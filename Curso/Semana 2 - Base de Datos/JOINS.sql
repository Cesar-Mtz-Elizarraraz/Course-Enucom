-- USO DE LA CLAUSULA JOIN: SE UTILIZA PARA COMBINAR FILAS DE 1 O MÁS TABLAS, SEGÚN UNA COLUMNA RELACIONADA ENTRE ELLAS


-- CREAR TABLAS CON DDL PARA LAS ENTIDADES PADRE E HIJO


-- PADRE
CREATE TABLE PADRE(
    ID_PADRE NUMBER,
    NOMBRE NVARCHAR2(100),
    APELLIDO NVARCHAR2(100),
    EDAD NUMBER,
    TRABAJO NVARCHAR2(100),
    CONSTRAINT PADRE_PK PRIMARY KEY(ID_PADRE)
);

INSERT INTO PADRE VALUES(1, 'NICOLAS', 'MORALES', 53, 'DOCENTE');
INSERT INTO PADRE VALUES(2, 'JUAN', 'HERNÁNDEZ', 45, 'INGENIERO CIVIL');
INSERT INTO PADRE VALUES(3, 'CARLOS', 'RAMÍREZ', 50, 'PROFESOR');
INSERT INTO PADRE VALUES(4, 'JOSE', 'BLANCO', 25, 'MECANICO');
INSERT INTO PADRE VALUES(5, 'PEDRO', 'PRIETO', 48, 'CARPINTERO');
INSERT INTO PADRE VALUES(6, 'SERGIO', 'COVA', 33, 'MANTENIMIENTO');
COMMIT;

-- HIJO
CREATE TABLE HIJO(
    ID_HIJO NUMBER,
    NOMBRE NVARCHAR2(100),
    APELLIDO NVARCHAR2(100),
    EDAD NUMBER,
    HOBBIE NVARCHAR2(100),
    PADRE_ID NUMBER,
    CONSTRAINT HIJO_PK PRIMARY KEY(ID_HIJO),
    CONSTRAINT PADRE_FK FOREIGN KEY(PADRE_ID) REFERENCES PADRE(ID_PADRE)
    -- CONSTRAINT(PALABRA RESERVADA) + NOMBRE DEL CONSTRAINT(UNICO) + TIPO DE CONSTRAINT + CAMPO QUE SERA LA CLAVE FORANEA +
    -- REFERENCES(PALABRA RESERVADA) + NOMBRE DE LA TABLA Y ENTRE PARENTESIS EL ATRIBUTO (ID_TABLA_REFERENCIADA) AL QUE SE HACE REFERENCIA
);

INSERT INTO HIJO VALUES(1, 'ALINE', 'MORALES', 27, 'VER TELEVISION', 1);
INSERT INTO HIJO VALUES(2, 'JAVIER', 'GOMEZ', 10, 'JUGAR FUTBOL', NULL);
INSERT INTO HIJO VALUES(3,'EDUARDO','BLANCO',25,'PROGRAMAR',4);
INSERT INTO HIJO VALUES(4, 'JARETH', 'CASTELLS', 24, 'JUGAR VIDEOJUEGOS', 5);
INSERT INTO HIJO VALUES(5, 'MARIO', 'HERNANDEZ', 15, 'FUTBOL', 2);
INSERT INTO HIJO VALUES(6,'PERLA','GARCIA',28,'NUTRIOLOGA',2);
COMMIT;

-- INNER JOIN --> DEVUELVE LOS REGISTROS CONCIDENTES DE AMBAS TABLAS
SELECT * FROM HIJO H
INNER JOIN PADRE P
ON H.PADRE_ID = P.ID_PADRE;

-- LEFT JOIN --> DEVUELVE TODOS LOS REGISTROS DE LA TABLA IZQUIERDA(HIJO) Y LOS VALORES CONCIDENTES DE LA TABLA DERECHA (PADRE)
SELECT * FROM HIJO H
LEFT JOIN PADRE P
ON H.PADRE_ID = P.ID_PADRE;

-- USO DE LEFT JOIN QUITANDO CONCIDENCIAS
SELECT * FROM HIJO H
LEFT JOIN PADRE P
ON H.PADRE_ID = P.ID_PADRE
WHERE H.PADRE_ID IS NULL;

-- RIGHT JOIN --> DEVUELVE TODOS LOS REGISTROS DE LA TABLA DERECHA(PADRE) Y LOS VALORES CONCIDENTES DE LA TABLA IZQUIERDA (HIJO)
SELECT * FROM HIJO H
RIGHT JOIN PADRE P
ON H.PADRE_ID = P.ID_PADRE;

-- USO DE RIGHT JOIN QUITANDO CONCIDENCIAS
SELECT * FROM HIJO H
RIGHT JOIN PADRE P
ON H.PADRE_ID = P.ID_PADRE
WHERE H.PADRE_ID IS NULL;

-- FULL JOIN --> DEVUELVE TODO LOS REGISTROS DE AMBAS TABLAS Y SUS VALORES COINCIDENTES
SELECT * FROM HIJO H
FULL JOIN PADRE P
ON H.PADRE_ID = P.ID_PADRE;

-- FULL JOIN SIN COINCIDENCIAS
SELECT * FROM HIJO H
FULL JOIN PADRE P
ON H.PADRE_ID = P.ID_PADRE
WHERE H.PADRE_ID IS NULL;