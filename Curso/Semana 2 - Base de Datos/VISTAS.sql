/* VISTAS O VIEWS: ES UNA CONSULTA ALAMCENDA QUE SE GUARDA ENN LA BASE DE DATOS COMO SI FUERA UNA TABLA VIRTUAL 
VENTAJAS:
    - SIMPLIFIFCAR CONSULTAS: PUEDES ENCAPSULAR UNA CONSULTA COMPLICADA Y LUEGO CONSULTARLA COMO SI FUERA UNA TABLA 
    - SEGURIDAD: SE PUEDE DAR PERMISOS DE ACCESO SOLO A LA VISTA, OCULTANDO COLUMNAS SENSIBLES DE LA TABLA REAL 
    - REUTILIZACION: UNA VEZ CREADA, LA VISTA SE PUEDE USAR EN MUCHAS CONUSLTAS
    - MANTENIMIENTO: SI CMABIAS LA CNULSTA DE LA VISTA, NO TIENES QUE CMABIAR TODAS LA CONUSLTA QUE LA USABAN 
TIPOS DE VISTAS:
    - SIMPLES-> CREADAS SOBRE UNA SOLA TABLAS
    - COMPLEJAS -> CREADAS A PARTIR DE VARIAS TABLAS CON JOIN, AGREGACION.
    - OPCION DE ACTUALIZACION -> EN ALGUNOS CASOS, SE PUEDE USAR PARA INSERTAR, ACTUALIZAR O ELIMINAR (SI SE CUMPLEN CIERTOS CRITERIO)
    - VISTAS MATERIALIZADAS -> ALAMCENAN LOS RESULTADOS FISICAMENTE, UTILES CUANDO LA CONSULTA ES MUY PESADA
*/

SELECT * FROM CELULAR;

-- MOSTRAR SOLO LOS CELULARES CUYO PRECIO ES MAYOR A $10,000
CREATE OR REPLACE VIEW V_CELULARES_CAROS AS
    SELECT ID_CELULAR, MARCA, MODELO, PRECIO
    FROM CELULAR
    WHERE PRECIO > 10000;
    
SELECT * FROM V_CELULARES_CAROS;

-- MOSTRAR LOS MODELOS DE CADA MARCA
CREATE OR REPLACE VIEW V_MODELOS_CEL AS
SELECT MARCA, MODELO FROM CELULAR;

SELECT * FROM V_MODELOS_CEL WHERE MARCA = 'MOTOROLA';

-- UTILIZAR UNA VISTA CON CLAUSULA CASE
CREATE OR REPLACE VIEW V_CEL_ALMACENAMIENTO AS
    SELECT MARCA, MODELO, CAPACIDAD, PRECIO,
    CASE 
        WHEN PRECIO < 8000 THEN 'ECONOMICO'
        WHEN PRECIO BETWEEN 8000 AND 15000 THEN 'GAMA MEDIA'
        ELSE 'GAMA ALTA'
    END AS CATEGORIA FROM CELULAR;
    
SELECT * FROM V_CEL_ALMACENAMIENTO;
    
    
CREATE TABLE VENTA(
    ID_VENTA NUMBER,
    CELULAR_ID NUMBER,
    CANTIDAD NUMBER,
    FECHA DATE,
    CONSTRAINT VENTA_PK PRIMARY KEY(ID_VENTA),
    CONSTRAINT CEL_FK FOREIGN KEY(CELULAR_ID) REFERENCES CELULAR(ID_CELULAR)
);

INSERT INTO VENTA VALUES(101, 1, 2, SYSDATE);
INSERT INTO VENTA VALUES(102, 2, 1, SYSDATE);
INSERT INTO VENTA VALUES(103, 1, 1, SYSDATE);
INSERT INTO VENTA VALUES(104, 3, 3, SYSDATE);

-- VENTA DE CELULARES
CREATE OR REPLACE VIEW V_VENTAS_CEL AS
    SELECT V.ID_VENTA, C.MARCA, C.MODELO, V.CANTIDAD, V.FECHA
    FROM VENTA V
    INNER JOIN CELULAR C ON V.CELULAR_ID = C.ID_CELULAR;
    
SELECT * FROM V_VENTAS_CEL;

-- TOTAL DE LO VENDIDO POR MODELO
CREATE OR REPLACE VIEW V_VENTA_TOTAL AS
    SELECT C.MARCA, C.MODELO, SUM(V.CANTIDAD) AS TOTAL_VENDIDO
    FROM CELULAR C
    INNER JOIN VENTA V ON C.ID_CELULAR = V.CELULAR_ID
    GROUP BY C.MARCA, C.MODELO;
    
SELECT * FROM V_VENTA_TOTAL;