/* TRIGGERS (O DISPARADOR): 
    BLOQUE DE CODIGO QUE SE EJECUTA AUTOMATICAMENTE NE RESPUESTA A CIERTOS EVENTOS EN UNA TABLA O VISTA
    INSERT, UPDATE, DELETE
    SE USAN PARA:
        - REGISTRAR AUDITORIAS(BITACORAS DE CAMBIOS)
        - VALIDAR REGLAS DE NEGOCIO COMPLEJAS
        - MANTENER INTEGRIDAD DE DATOS
        - GENERAR VALORES AUTOMATICOS(POR EJMEPLO TIMESTAMP O USUARIO QUE REALIZO LA MODIFICACIÓN)
    
    TIPOS DE TRIGGERS:
        - BEFORE: SE EJECUTA ANTES DE QUE OCURRA LA OPERACION
        - AFTER: SE EJECUTA DESPUES DE QUE OCURRA LA OPERACION
        - INSTEAD OF: SE USA EN VISTAS, REEMPLAZA LA OPRESION DML
    
    NIVEL DEL TRIGGER:
        - ROW(POR FILA): SE ACTIVA UNA VEZ POR CADA FILA AFECTADA
        - STATEMENT(POR SENTENCIA): SE ACTIVA UNA SOLA VEZ POR INSTRUCCIÓN SQL, SIN IMPORTAR CUANTAS FILAS AFECTE
        
    ESTRUCTURA:
        CREATE OR REPLACE TRIGGER <NOMBRE_TRIGGER>
        [BEFORE | AFTER | INSTEAD OF] -> INSERT OR UPDATE OR DELETE ON <NOMBRE_TABLA>
        FOR EACH ROW <-- (SI SE USA POR FILA)
        DECLARE
        BEGIN
        END;
        
    VARIABLES ESPECIALES EN TRIGGER POR FILA(FOR EACH ROW)
        - :OLD -> REPRESENTA LOS VALORES ANTERIORES (ANTES DE MODIFICAR)
        - :NEW -> REPRESENTA LOS VALORES NUEVOS(DESPUES DE INSERTAR O MIDIFICAR)
        // SOLO FUNCIONAN EN TRIGGER "FOR EACH ROW"
*/

CREATE TABLE CELULAR(
    ID_CELULAR NUMBER,
    MARCA NVARCHAR2(100),
    MODELO NVARCHAR2(100),
    PROCESADOR NVARCHAR2(100),
    CAPACIDAD NVARCHAR2(100),
    COLOR NVARCHAR2(100),
    PRECIO NUMBER,
    CONSTRAINT CELULAR_PK PRIMARY KEY(ID_CELULAR)
);

-- CREAR UNA ENTIDAD BITACORA QUE REGISTRARA CADA EVENTO OCURRIDO EN LA TABLA CELULAR
CREATE TABLE BIT_CEL(
    ID_BIT NUMBER,
    
    -- VALORES NUEVOS :NEW
    ID_CELULAR NUMBER,
    MARCA NVARCHAR2(100),
    MODELO NVARCHAR2(100),
    PROCESADOR NVARCHAR2(100),
    CAPACIDAD NVARCHAR2(100),
    COLOR NVARCHAR2(100),
    PRECIO NUMBER,
    
    -- VALORES VIEJOS :OLD
    MARCA_OLD NVARCHAR2(100),
    MODELO_OLD NVARCHAR2(100),
    PROCESADOR_OLD NVARCHAR2(100),
    CAPACIDAD_OLD NVARCHAR2(100),
    COLOR_OLD NVARCHAR2(100),
    PRECIO_OLD NUMBER,
    
    -- CAMPOS DE CONTROL
    USUARIO NVARCHAR2(20),
    FECHA_MOV DATE,
    MOVIMIENTO NVARCHAR2(100),
    CONSTRAINT BIT_CEL_PK PRIMARY KEY(ID_BIT)
);

-- TRIGGER
CREATE OR REPLACE TRIGGER TR_I_CELULAR
AFTER INSERT ON CELULAR
FOR EACH ROW
DECLARE
    LV_ID_BIT NUMBER;
    LV_USUARIO NVARCHAR2(100);
    LV_FECHA DATE;
BEGIN
    -- COMO RECUPERAR LA FECHA DE SISTEMA
    SELECT SYSDATE INTO LV_FECHA FROM DUAL;
    
    -- RECUPERAR EL USUARIO
    SELECT USER INTO LV_USUARIO FROM DUAL;
    
    -- OBTENER UN ID VALIDO PARA MI TABLA BITACORA
    SELECT NVL(MAX(ID_BIT), 0) + 1 INTO LV_ID_BIT FROM BIT_CEL;
    
    INSERT INTO BIT_CEL(ID_BIT, ID_CELULAR, MARCA, MODELO, PROCESADOR, CAPACIDAD, COLOR, PRECIO, MARCA_OLD, MODELO_OLD, PROCESADOR_OLD, CAPACIDAD_OLD, COLOR_OLD, PRECIO_OLD,
        USUARIO, FECHA_MOV, MOVIMIENTO)
    VALUES(LV_ID_BIT, :NEW.ID_CELULAR, :NEW.MARCA, :NEW.MODELO, :NEW.PROCESADOR, :NEW.CAPACIDAD, :NEW.COLOR, :NEW.PRECIO, NULL, NULL, NULL, NULL, NULL, 0,
        LV_USUARIO, LV_FECHA, 'INSERT');
END TR_I_CELULAR;
/ -- INDICADOR

-- PRUEBAS
INSERT INTO CELULAR VALUES(1, 'SAMSUNG', 'GALAXY 3', 'OCTA CORE', '128GB', 'NEGRO', 34000);
INSERT INTO CELULAR VALUES(2, 'HUAWEI', 'P40', 'OCTA CORE', '168GB', 'NEGRO', 20000);

SELECT * FROM CELULAR;
SELECT * FROM BIT_CEL;

// REALIZAR EL TRIGGER PARA EDITAR Y OTRO PARA ELIMINAR DE LA TABLA CELULAR
-- TRIGGER EDITAR
CREATE OR REPLACE TRIGGER TR_U_CELULAR
AFTER UPDATE ON CELULAR
FOR EACH ROW
DECLARE
    U_ID_BIT NUMBER;
    U_USUARIO NVARCHAR2(100);
    U_FECHA DATE;
BEGIN
    SELECT NVL(MAX(ID_BIT), 0) + 1 INTO U_ID_BIT FROM BIT_CEL;
    SELECT SYSDATE INTO U_FECHA FROM DUAL;
    SELECT USER INTO U_USUARIO FROM DUAL;
    
    INSERT INTO BIT_CEL(ID_BIT, ID_CELULAR, MARCA, MODELO, PROCESADOR, CAPACIDAD, COLOR, PRECIO, MARCA_OLD, MODELO_OLD, PROCESADOR_OLD, CAPACIDAD_OLD, COLOR_OLD, PRECIO_OLD,
        USUARIO, FECHA_MOV, MOVIMIENTO)
    VALUES(U_ID_BIT, :NEW.ID_CELULAR, :NEW.MARCA, :NEW.MODELO, :NEW.PROCESADOR, :NEW.CAPACIDAD, :NEW.COLOR, :NEW.PRECIO, :OLD.MARCA, :OLD.MODELO, :OLD.PROCESADOR, :OLD.CAPACIDAD, :OLD.COLOR, :OLD.PRECIO,
        U_USUARIO, U_FECHA, 'UPDATE');
END TR_U_CELULAR;

-- PRUEBAS
UPDATE CELULAR 
SET MARCA = 'XIAOMI', MODELO = 'REDMI NOTE 14', PRECIO = 5500
WHERE ID_CELULAR = 2;

UPDATE CELULAR 
SET PROCESADOR = 'SNAPDRAGON', COLOR = 'BLANCO', PRECIO = 13200
WHERE ID_CELULAR = 1;

UPDATE CELULAR 
SET CAPACIDAD = '256GB';
/ -- INDICADOR

SELECT * FROM CELULAR;
SELECT * FROM BIT_CEL;


-- TRIGGER ELIMINAR
CREATE OR REPLACE TRIGGER TR_D_CELULAR
AFTER DELETE ON CELULAR
FOR EACH ROW
DECLARE
    D_ID_BIT NUMBER;
    D_USUARIO NVARCHAR2(100);
    D_FECHA DATE;
BEGIN
    SELECT NVL(MAX(ID_BIT), 0) + 1 INTO D_ID_BIT FROM BIT_CEL;
    SELECT SYSDATE INTO D_FECHA FROM DUAL;
    SELECT USER INTO D_USUARIO FROM DUAL;
    
    INSERT INTO BIT_CEL(ID_BIT, ID_CELULAR, MARCA, MODELO, PROCESADOR, CAPACIDAD, COLOR, PRECIO, MARCA_OLD, MODELO_OLD, PROCESADOR_OLD, CAPACIDAD_OLD, COLOR_OLD, PRECIO_OLD,
        USUARIO, FECHA_MOV, MOVIMIENTO)
    VALUES(D_ID_BIT, :OLD.ID_CELULAR, NULL, NULL, NULL, NULL, NULL, 0, :OLD.MARCA, :OLD.MODELO, :OLD.PROCESADOR, :OLD.CAPACIDAD, :OLD.COLOR, :OLD.PRECIO,
        D_USUARIO, D_FECHA, 'DELETE');
END TR_D_CELULAR;

-- PRUEBAS
DELETE FROM CELULAR
WHERE ID_CELULAR = 2;
/ -- INDICADOR

SELECT * FROM CELULAR;
SELECT * FROM BIT_CEL;

