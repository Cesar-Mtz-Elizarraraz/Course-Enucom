-- Nombre del Aspirante: Cesar Manuel Martínez Elizarraraz
-- Instructor: Ing. Ilse Aline Morales Castillo


-- =========== TABLAS ============

-- TABLA: NBA.EQUIPOS
CREATE TABLE EQUIPOS (
 NOMBRE NVARCHAR2(20),
 CIUDAD NVARCHAR2(20),
 CONFERENCIA NVARCHAR2(4),
 DIVISION NVARCHAR2(9),
 CONSTRAINT EQUIPOS_PK PRIMARY KEY(NOMBRE)
);


-- TABLA: NBA.JUGADORES
CREATE TABLE JUGADORES (
 CODIGO NUMBER,
 NOMBRE NVARCHAR2(30),
 PROCEDENCIA NVARCHAR2(20),
 ALTURA NVARCHAR2(4),
 PESO NUMBER,
 POSICION NVARCHAR2(5),
 NOMBRE_EQUIPO NVARCHAR2(20),
 CONSTRAINT JUGADORES_PK PRIMARY KEY(CODIGO),
 CONSTRAINT JUGADORES_EQUIPO_FK FOREIGN KEY(NOMBRE_EQUIPO) REFERENCES EQUIPOS(NOMBRE)
);


-- TABLA: NBA.PARTIDOS
CREATE TABLE PARTIDOS (
 CODIGO NUMBER,
 EQUIPO_LOCAL NVARCHAR2(20),
 EQUIPO_VISITANTE NVARCHAR2(20),
 PUNTOS_LOCAL NUMBER,
 PUNTOS_VISITANTE NUMBER,
 TEMPORADA NVARCHAR2(5),
 CONSTRAINT PARTIDOS_PK PRIMARY KEY(CODIGO),
 CONSTRAINT PARTIDOS_LOCAL_FK FOREIGN KEY(EQUIPO_LOCAL) REFERENCES EQUIPOS(NOMBRE),
 CONSTRAINT PARTIDOS_VISITANTE_FK FOREIGN KEY(EQUIPO_VISITANTE) REFERENCES EQUIPOS(NOMBRE)
);


-- TABLA: NBA.ESTADISTICAS
CREATE TABLE ESTADISTICAS (
 TEMPORADA NVARCHAR2(5),
 JUGADOR NUMBER,
 PUNTOS_POR_PARTIDO FLOAT,
 ASISTENCIAS_POR_PARTIDO FLOAT,
 TAPONES_POR_PARTIDO FLOAT,
 REBOTES_POR_PARTIDO FLOAT,
 CONSTRAINT ESTADISTICAS_PK PRIMARY KEY(TEMPORADA, JUGADOR),
 CONSTRAINT ESTADISTICAS_JUGADOR_FK FOREIGN KEY(JUGADOR) REFERENCES JUGADORES(CODIGO)
);



-- =========== CONSULTAS ============

-- 1.	Mostrar el nombre de todos los jugadores ordenados alfabéticamente. (Debe devolver 432 registros.)
SELECT NOMBRE FROM JUGADORES ORDER BY NOMBRE ASC; 

-- 2.	Mostrar el nombre de todos los equipos ordenados alfabéticamente.
SELECT NOMBRE FROM EQUIPOS ORDER BY NOMBRE ASC; 

-- 3.	Mostrar el nombre de los equipos del este.
SELECT NOMBRE FROM EQUIPOS WHERE LOWER(CONFERENCIA) = 'east';

-- 4.	Mostrar los equipos donde su ciudad empieza por c.
SELECT * FROM EQUIPOS WHERE LOWER(CIUDAD) LIKE 'c%'; 

-- 5.	Mostrar todos los jugadores y su equipo ordenado por nombre del equipo. (Debe devolver 432 registros)
SELECT NOMBRE, NOMBRE_EQUIPO FROM JUGADORES ORDER BY NOMBRE ASC, NOMBRE_EQUIPO ASC; 

-- 6.	Mostrar todos los jugadores del equipo «Raptors».
SELECT * FROM JUGADORES WHERE NOMBRE_EQUIPO = 'Raptors';

-- 7.	Mostrar los puntos por partido de ‘Pau Gasol’.
SELECT JU.NOMBRE AS NOMBRE_JUGADOR, ES.PUNTOS_POR_PARTIDO
FROM ESTADISTICAS ES
INNER JOIN JUGADORES JU ON JU.CODIGO = ES.JUGADOR
WHERE JU.NOMBRE = 'Pau Gasol';

-- 8.	Mostrar los puntos por partido de ‘Pau Gasol’ en la temporada ’04/05′.
SELECT JU.NOMBRE AS NOMBRE_JUGADOR, ES.PUNTOS_POR_PARTIDO
FROM ESTADISTICAS ES
INNER JOIN JUGADORES JU ON JU.CODIGO = ES.JUGADOR
WHERE JU.NOMBRE = 'Pau Gasol' AND ES.TEMPORADA = '04/05';

-- 9.	Mostrar el número de puntos de cada jugador en toda su carrera. (Debe devolver 424 registros.)
SELECT JU.NOMBRE AS NOMBRE_JUGADOR, SUM(ES.PUNTOS_POR_PARTIDO) AS PUNTOS_TOTALES
FROM ESTADISTICAS ES
LEFT JOIN JUGADORES JU ON JU.CODIGO = ES.JUGADOR
GROUP BY JU.NOMBRE;

-- 10.	Mostrar el número de jugadores de cada equipo.
SELECT NOMBRE_EQUIPO, COUNT(CODIGO) AS TOTAL_JUGADORES FROM JUGADORES 
GROUP BY NOMBRE_EQUIPO; 

-- 11.	Mostrar el jugador que más puntos ha realizado en toda su carrera.
SELECT * FROM(
    SELECT JU.NOMBRE AS NOMBRE_JUGADOR, SUM(ES.PUNTOS_POR_PARTIDO) AS PUNTOS_TOTALES
    FROM ESTADISTICAS ES
    LEFT JOIN JUGADORES JU ON JU.CODIGO = ES.JUGADOR
    GROUP BY JU.NOMBRE
    ORDER BY PUNTOS_TOTALES DESC
) WHERE ROWNUM = 1;

-- 12.	Mostrar el nombre del equipo, conferencia y división del jugador más alto de la NBA.
SELECT * FROM(
    SELECT EQ.NOMBRE, EQ.CONFERENCIA, EQ.DIVISION
    FROM EQUIPOS EQ
    RIGHT JOIN JUGADORES JU ON JU.NOMBRE_EQUIPO = EQ.NOMBRE
    ORDER BY JU.ALTURA DESC
) WHERE ROWNUM = 1;

-- 13.	Mostrar el partido o partidos (equipo_local, equipo_visitante y diferencia) con mayor diferencia de puntos. (CREAR UNA VIEW)
CREATE OR REPLACE VIEW V_MAYOR_DIFERENCIA_PUNTOS AS
    SELECT * FROM (
        SELECT EQUIPO_LOCAL, EQUIPO_VISITANTE,
        (CASE
            WHEN (PUNTOS_LOCAL - PUNTOS_VISITANTE) < 0 THEN
                PUNTOS_VISITANTE - PUNTOS_LOCAL
            ELSE 
                PUNTOS_LOCAL - PUNTOS_VISITANTE
        END) AS DIFERENCIA_PUNTOS 
        FROM PARTIDOS
    ) WHERE DIFERENCIA_PUNTOS = (
        SELECT MAX(CASE
            WHEN (PUNTOS_LOCAL - PUNTOS_VISITANTE) < 0 THEN
                PUNTOS_VISITANTE - PUNTOS_LOCAL
            ELSE 
                PUNTOS_LOCAL - PUNTOS_VISITANTE
        END) FROM PARTIDOS
    );

SELECT * FROM V_MAYOR_DIFERENCIA_PUNTOS;

-- 14.	Mostrar la media de puntos en partidos de los equipos de la división Pacific. (CREAR UNA VIEW)
CREATE OR REPLACE VIEW V_MEDIA_PUNTOS_PACIFIC AS
    SELECT AVG(PA.PUNTOS_LOCAL + PA.PUNTOS_VISITANTE) AS MEDIA_PUNTOS
    FROM PARTIDOS PA
    INNER JOIN EQUIPOS EQ ON PA.EQUIPO_LOCAL = EQ.NOMBRE OR PA.EQUIPO_VISITANTE = EQ.NOMBRE
    WHERE EQ.DIVISION = 'Pacific';

SELECT * FROM V_MEDIA_PUNTOS_PACIFIC;

-- 15.	Mostrar los puntos de cada equipo en los partidos, tanto de local como de visitante. Usa una vista (CREAR UNA VIEW)
CREATE OR REPLACE VIEW V_PUNTOS_TOTALES_EQUIPO AS
    SELECT EQ.NOMBRE AS NOMBRE_EQUIPO, SUM(PA.PUNTOS_LOCAL) AS TOTAL_PUNTOS_LOCAL, SUM(PA.PUNTOS_VISITANTE) AS TOTAL_PUNTOS_VISITANTE
    FROM PARTIDOS PA
    INNER JOIN EQUIPOS EQ ON PA.EQUIPO_LOCAL = EQ.NOMBRE OR PA.EQUIPO_VISITANTE = EQ.NOMBRE
    GROUP BY EQ.NOMBRE;
    
SELECT * FROM V_PUNTOS_TOTALES_EQUIPO;