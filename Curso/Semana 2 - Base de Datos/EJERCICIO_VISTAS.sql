/*EJERCICIOS VISTAS SIMPLES
1.- LISTAR EL NOMBRE Y PRECIO DE TODOS LOS MEDICAMENTOS DE UN SOLO LABORATORIO (ELIGE EL QUE QUIERAS)
2.- MOSTRAR UNICAMENTE LOS MEDICAMENTOS CON PRECIO MAYOR A 50
3.- CALCULAR EL PRECIO PROMEDIO DE TODOS LOSMEDICMANETOS 
4.- MOSTRAR EL MEDICMANETO MAS CARO Y MAS BARATO 
5.- USAR EL CASE PARA CLAFICIAR LOS MEDICMANETOS, 'ECONOMICO', 'MEDIO', 'CARO'
EJERCICIOS CON VISTAS COMPLEJAS
CREAR UNA SEGUNDA TABLA LLAMADA VENTA(ID, ID_MED, CANTIDAD, FECHA) Y REALIZAR LOS REGISTROS SUFICENTES PARA PRUEBAS 
1.- MOSTRAR EL TOTAL DE VENTAS POR MEDICAMENTO
2.- CALCULAR EL INGRESO TOTAL(cANTIDAD * PRECIO) GENERADO POR CADA MEDICMAENTO
3.-OBTENER EL MEDICAMENTO MAS VENDIDO
4.- MOSTRAR LOS MEDICAMENTOS QUE NO TENGAN VENTAS REALIZDAS.
5.- MOSTRAR EL DETALLE CON EL NOMBRE, LABORATORIO, TOTAL VENDIDO CON UN CASE QUE INDIQUE 'POPULAR', 'MUY POPULAR', 'NO POPULAR'
*/

CREATE TABLE MEDICAMENTO(
    ID_MEDICAMENTO NUMBER,
    NOMBRE_GENERICO NVARCHAR2(100),
    NOMBRE_COMERCIAL NVARCHAR2(100),
    DESCRIPCION NVARCHAR2(255),
    LABORATORIO NVARCHAR2(100),
    PRECIO NUMBER,
    TIPO_SUMISTRO NVARCHAR2(100),
    CONSTRAINT MEDICAMENTO_PK PRIMARY KEY(ID_MEDICAMENTO)
);

INSERT INTO MEDICAMENTO VALUES(1, 'TEMPRA', 'PARACETAMOL 500MG', 'ANALGESICO Y ANTIPIRETICO DE USO COMUN', 'LABORATORIOS GENERICOS', 50, 'TABLETAS');
INSERT INTO MEDICAMENTO VALUES(2, 'ADVIL', 'IBUPROFENO 400MG', 'ANTINFLAMATORIO PARA GOLPES', 'FARMACEUTICA DELTA', 320, 'CAPSULAS');
INSERT INTO MEDICAMENTO VALUES(3, 'AMOXIL', 'AMOXICILINA 500MG', 'ANTIBIOTICO PARA TRATAR INFECCIONES', 'BIOLAB', 35, 'CAPSULAS');
INSERT INTO MEDICAMENTO VALUES(4, 'CLARITIN', 'LORATADINA 10MG', 'ANTIHISTAMINICO QUE TRATA DIFERENTES ALERGIAS', 'SALUDPHARMA', 195, 'TABLETAS');
INSERT INTO MEDICAMENTO VALUES(5, 'ALLERKID', 'LORATADINA 1MG/ML', 'TRATAMIENTO DE ALERGIAS LEVES EN NIÑOS', 'SALUDPHARMA', 75, 'JARABE');
INSERT INTO MEDICAMENTO VALUES(6, 'GASTRIL', 'OMEPRAZOL 10MG', 'ALIVIO DE ACIDEZ OCASIONAL', 'GASTROMED', 38.99, 'TABLETAS');
INSERT INTO MEDICAMENTO VALUES(7, 'CLARIDIN', 'LORATADINA + PSEUDOEFEDRINA', 'ANTIALERGICO CON EFECTO DESCONGESTIVO', 'SALUDPHARMA', 230, 'TABLETAS');
INSERT INTO MEDICAMENTO VALUES(8, 'AMOXIDAL', 'AMOXICILINA + ÁCIDO CLAVULÁNICO', 'ANTIBIOTICO DE AMPLIO ESPECTRO', 'BIOLAB', 450, 'SUSPENSION');
INSERT INTO MEDICAMENTO VALUES(9, 'LORATIN', 'LORATADINA 5MG/5ML', 'TRATAMIENTO DE ALERGIAS EN NIÑOS', 'BIOLAB', 210, 'JARABE');
INSERT INTO MEDICAMENTO VALUES(10, 'OMEPRIX', 'OMEPRAZOL 20MG', 'TRATAMIENTO DE REFLUJO GÁSTRICO', 'GASTROMED', 30, 'CAPSULAS');
INSERT INTO MEDICAMENTO VALUES(11, 'TERMOGESIC', 'PARACETAMOL + CAFEINA', 'ANALGESICO Y ESTIMULANTE SUAVE', 'LABORATORIOS GENERICOS', 290, 'TABLETAS');
INSERT INTO MEDICAMENTO VALUES(12, 'IBUDOL', 'IBUPROFENO 200MG', 'ALIVIO DE DOLORES LEVES', 'BIOLAB', 310, 'TABLETAS');
INSERT INTO MEDICAMENTO VALUES(13, 'BIOCILINA', 'AMOXICILINA 250MG', 'USO PEDIATRICO CONTRA INFECCIONES BACTERIANAS', 'BIOLAB', 360, 'SUSPENSION');
INSERT INTO MEDICAMENTO VALUES(14, 'CAFETEMP', 'PARACETAMOL 300MG + CAFEINA', 'ANALGESICO SUAVE DE VENTA LIBRE', 'LABORATORIOS GENERICOS', 70, 'TABLETAS');
INSERT INTO MEDICAMENTO VALUES(15, 'GASTRUM', 'OMEPRAZOL 40MG', 'TRATAMIENTO INTENSIVO DE ULCERAS', 'GASTROMED', 150, 'CAPSULAS');
INSERT INTO MEDICAMENTO VALUES(16, 'DOLOX', 'PARACETAMOL 100MG', 'ANALGESICO PEDIATRICO', 'LABORATORIOS GENERICOS', 25, 'JARABE');
INSERT INTO MEDICAMENTO VALUES(17, 'IBUFAST', 'IBUPROFENO 100MG', 'SUSPENSION PARA NIÑOS CONTRA LA FIEBRE', 'FARMACEUTICA DELTA', 49.50, 'SUSPENSION');
INSERT INTO MEDICAMENTO VALUES(18, 'AMOXIKID', 'AMOXICILINA 125MG/5ML', 'ANTIBIOTICO DE USO PEDIATRICO', 'BIOLAB', 99.99, 'SUSPENSION');
INSERT INTO MEDICAMENTO VALUES(19, 'LOSEC', 'OMEPRAZOL 2ML', 'INHIBIDOR PARA CONTRARESTAR LA GASTRITIS', 'GASTROMED', 110, 'INYECCION');
INSERT INTO MEDICAMENTO VALUES(20, 'DOLGENIL', 'PARACETAMOL 650MG', 'ANALGESICO PARA DOLORES MODERADOS', 'LABORATORIOS GENERICOS', 270, 'TABLETAS');
INSERT INTO MEDICAMENTO VALUES(21, 'FLEXIMED', 'IBUPROFENO 600MG', 'ANTINFLAMATORIO Y ANALGESICO MUSCULAR', 'FARMACEUTICA DELTA', 340, 'CAPSULAS');
INSERT INTO MEDICAMENTO VALUES(22, 'IBUSOFT', 'IBUPROFENO 150MG', 'ANTIINFLAMATORIO LEVE PARA NIÑOS', 'FARMACEUTICA DELTA', 80, 'TABLETAS');
INSERT INTO MEDICAMENTO VALUES(23, 'CLARIMIN', 'LORATADINA 2.5MG/5ML', 'ANTIHISTAMINICO DE USO INFANTIL', 'SALUDPHARMA', 165, 'JARABE');
INSERT INTO MEDICAMENTO VALUES(24, 'BIOCEF', 'AMOXICILINA 100MG/5ML', 'ANTIBIOTICO DE USO PEDIATRICO LEVE', 'BIOLAB', 35, 'SUSPENSION');
INSERT INTO MEDICAMENTO VALUES(25, 'OMEX', 'OMEPRAZOL 5MG', 'TRATAMIENTO SUAVE DE ACIDEZ ESTOMACAL', 'GASTROMED', 155, 'TABLETAS');



SELECT * FROM MEDICAMENTO;
DELETE FROM MEDICAMENTO;

-- EJERCICIOS VISTAS SIMPLES
-- 1.- LISTAR EL NOMBRE Y PRECIO DE TODOS LOS MEDICAMENTOS DE UN SOLO LABORATORIO (ELIGE EL QUE QUIERAS)
CREATE OR REPLACE VIEW V_MED_LAB_BIOLAB AS
    SELECT NOMBRE_GENERICO, NOMBRE_COMERCIAL, PRECIO
    FROM MEDICAMENTO
    WHERE LABORATORIO = 'BIOLAB';
    
SELECT * FROM V_MED_LAB_BIOLAB;

-- 2.- MOSTRAR UNICAMENTE LOS MEDICAMENTOS CON PRECIO MAYOR A 50
CREATE OR REPLACE VIEW V_MED_PRECIO_MAYOR_50 AS
    SELECT *
    FROM MEDICAMENTO
    WHERE PRECIO > 50;
    
SELECT * FROM V_MED_PRECIO_MAYOR_50;

-- 3.- CALCULAR EL PRECIO PROMEDIO DE TODOS LOS MEDICAMENTOS 
CREATE OR REPLACE VIEW V_MED_PROMEDIO_PRECIOS AS
    SELECT AVG(PRECIO) AS PRECIO_PROMEDIO
    FROM MEDICAMENTO;
    
SELECT * FROM V_MED_PROMEDIO_PRECIOS;

-- 4.- MOSTRAR EL MEDICAMENTO MAS CARO Y MAS BARATO 
CREATE OR REPLACE VIEW V_MED_MAS_CARO_BARATO AS
    SELECT *
    FROM MEDICAMENTO 
    WHERE PRECIO IN(
        SELECT MAX(PRECIO)
        FROM MEDICAMENTO
        UNION
        SELECT MIN(PRECIO)
        FROM MEDICAMENTO
    );
    
SELECT * FROM V_MED_MAS_CARO_BARATO;

-- 5.- USAR EL CASE PARA CLASIFICAR LOS MEDICAMENTOS, 'ECONOMICO', 'MEDIO', 'CARO'
CREATE OR REPLACE VIEW V_MED_CLASIFICACION_PRECIO AS
    SELECT ID_MEDICAMENTO, NOMBRE_GENERICO, NOMBRE_COMERCIAL, DESCRIPCION, LABORATORIO, PRECIO, 
    (CASE
        WHEN PRECIO BETWEEN 0 AND 149.99 THEN 'ECONOMICO'
        WHEN PRECIO BETWEEN 150 AND 299.99 THEN 'MEDIO'
        WHEN PRECIO >= 300 THEN 'CARO'
        ELSE 'PRECION NO DEFINIDO'
    END) AS CLASIFICACION, TIPO_SUMISTRO
    FROM MEDICAMENTO;

SELECT * FROM V_MED_CLASIFICACION_PRECIO;


-- TABLA VENTA DE MEDICAMENTOS
CREATE TABLE VENTA_MEDICAMENTO(
    ID_VENTA NUMBER,
    MEDICAMENTO_ID NUMBER,
    CANTIDAD NUMBER,
    FECHA DATE,
    CONSTRAINT VENTA_MED_PK PRIMARY KEY(ID_VENTA),
    CONSTRAINT VENTA_MED_FK FOREIGN KEY(MEDICAMENTO_ID) REFERENCES MEDICAMENTO(ID_MEDICAMENTO)
);

INSERT INTO VENTA_MEDICAMENTO VALUES(1, 3, 2, SYSDATE);
INSERT INTO VENTA_MEDICAMENTO VALUES(2, 7, 1, SYSDATE);
INSERT INTO VENTA_MEDICAMENTO VALUES(3, 12, 3, SYSDATE);
INSERT INTO VENTA_MEDICAMENTO VALUES(4, 18, 10, SYSDATE);
INSERT INTO VENTA_MEDICAMENTO VALUES(5, 22, 3, SYSDATE);
INSERT INTO VENTA_MEDICAMENTO VALUES(6, 5, 2, SYSDATE);
INSERT INTO VENTA_MEDICAMENTO VALUES(7, 9, 11, SYSDATE);
INSERT INTO VENTA_MEDICAMENTO VALUES(8, 14, 5, SYSDATE);
INSERT INTO VENTA_MEDICAMENTO VALUES(9, 25, 4, SYSDATE);
INSERT INTO VENTA_MEDICAMENTO VALUES(10, 1, 3, SYSDATE);
INSERT INTO VENTA_MEDICAMENTO VALUES(11, 8, 8, SYSDATE);
INSERT INTO VENTA_MEDICAMENTO VALUES(12, 11, 4, SYSDATE);
INSERT INTO VENTA_MEDICAMENTO VALUES(13, 16, 7, SYSDATE);


-- SECUENCIA PARA VENTA DE MEDICAMENTO
-- DROP SEQUENCE S_ID_VENTA_MED;
CREATE SEQUENCE S_ID_VENTA_MED
START WITH 1
MINVALUE 1
MAXVALUE 999
NOCYCLE;

DELETE FROM VENTA_MEDICAMENTO;
DELETE FROM MEDICAMENTO;


-- BLOQUE ANONIMO PARA GENERAR VENTAS ALEATORIAS
DECLARE
    FECHA_MOV DATE := SYSDATE;
    SQ_ID_VENTA NUMBER;
BEGIN
    FOR i IN 1..50 LOOP
        SELECT S_ID_VENTA_MED.NEXTVAL INTO SQ_ID_VENTA FROM DUAL;
        INSERT INTO VENTA_MEDICAMENTO(ID_VENTA, MEDICAMENTO_ID, CANTIDAD, FECHA) 
        VALUES(
            SQ_ID_VENTA,
            TRUNC(DBMS_RANDOM.VALUE(1, 26)), -- ENTRE 1 Y 25 // TRUNC ELIMINA LA PARTE DECIMAL, NO REDONDEA
            TRUNC(DBMS_RANDOM.VALUE(1, 11)), -- ENTRE 1 Y 5 // PARA REDONDEAR SE OCUPA ROUND()
            FECHA_MOV
        );
    END LOOP;
    COMMIT;
END;
/ -- INDICADOR

DELETE FROM VENTA_MEDICAMENTO;
SELECT * FROM VENTA_MEDICAMENTO ORDER BY ID_VENTA;


-- 1.- MOSTRAR EL TOTAL DE VENTAS POR MEDICAMENTO
CREATE OR REPLACE VIEW V_MED_VENTAS_TOTALES AS
    SELECT M.NOMBRE_GENERICO, M.NOMBRE_COMERCIAL, M.DESCRIPCION, M.LABORATORIO, COUNT(VM.MEDICAMENTO_ID) AS TOTAL_VENTAS, NVL(SUM(VM.CANTIDAD), 0) AS UNIDADES_VENDIDAS
    FROM MEDICAMENTO M
    LEFT JOIN VENTA_MEDICAMENTO VM ON VM.MEDICAMENTO_ID = M.ID_MEDICAMENTO
    GROUP BY M.NOMBRE_GENERICO, M.NOMBRE_COMERCIAL, M.DESCRIPCION, M.LABORATORIO; 
/ -- INDICADOR
    
SELECT * FROM V_MED_VENTAS_TOTALES;


-- 2.- CALCULAR EL INGRESO TOTAL(CANTIDAD * PRECIO) GENERADO POR CADA MEDICMAENTO
CREATE OR REPLACE VIEW V_MED_INGRESOS_GENERADOS AS
    SELECT M.NOMBRE_GENERICO, M.NOMBRE_COMERCIAL, M.DESCRIPCION, M.LABORATORIO, M.PRECIO, NVL(SUM(VM.CANTIDAD), 0) AS UNIDADES_VENDIDAS, (NVL(SUM(VM.CANTIDAD), 0) * M.PRECIO) AS INGRESO_TOTAL
    FROM MEDICAMENTO M
    LEFT JOIN VENTA_MEDICAMENTO VM ON VM.MEDICAMENTO_ID = M.ID_MEDICAMENTO
    GROUP BY M.NOMBRE_GENERICO, M.NOMBRE_COMERCIAL, M.DESCRIPCION, M.LABORATORIO, M.PRECIO; 
/ -- INDICADOR
    
SELECT * FROM V_MED_INGRESOS_GENERADOS;


-- 3.-OBTENER EL MEDICAMENTO MAS VENDIDO
CREATE OR REPLACE VIEW V_MED_MAS_VENDIDO AS
    SELECT NOMBRE_GENERICO, NOMBRE_COMERCIAL, DESCRIPCION, LABORATORIO, UNIDADES_VENDIDAS
    FROM V_MED_VENTAS_TOTALES 
    WHERE UNIDADES_VENDIDAS = (SELECT MAX(UNIDADES_VENDIDAS) FROM V_MED_VENTAS_TOTALES);
/ -- INDICADOR
    
CREATE OR REPLACE VIEW V_MED_MAS_VENDIDO AS
    SELECT * FROM (
        SELECT M.NOMBRE_GENERICO, M.NOMBRE_COMERCIAL, M.DESCRIPCION, M.LABORATORIO, NVL(SUM(VM.CANTIDAD), 0) AS UNIDADES_VENDIDAS
        FROM MEDICAMENTO M
        INNER JOIN VENTA_MEDICAMENTO VM ON VM.MEDICAMENTO_ID = M.ID_MEDICAMENTO
        GROUP BY M.NOMBRE_GENERICO, M.NOMBRE_COMERCIAL, M.DESCRIPCION, M.LABORATORIO
        ORDER BY UNIDADES_VENDIDAS DESC
    ) WHERE ROWNUM = 1;
    
/ -- INDICADOR

SELECT * FROM V_MED_MAS_VENDIDO;


-- 4.- MOSTRAR LOS MEDICAMENTOS QUE NO TENGAN VENTAS REALIZDAS.
CREATE OR REPLACE VIEW V_MED_SIN_VENTAS AS
    SELECT *
    FROM V_MED_VENTAS_TOTALES 
    WHERE TOTAL_VENTAS = 0;
/ -- INDICADOR

CREATE OR REPLACE VIEW V_MED_SIN_VENTAS AS
    SELECT M.NOMBRE_GENERICO, M.NOMBRE_COMERCIAL, M.DESCRIPCION, M.LABORATORIO
    FROM VENTA_MEDICAMENTO VM
    RIGHT JOIN MEDICAMENTO M ON VM.MEDICAMENTO_ID = M.ID_MEDICAMENTO
    WHERE VM.ID_VENTA IS NULL
    GROUP BY M.NOMBRE_GENERICO, M.NOMBRE_COMERCIAL, M.DESCRIPCION, M.DESCRIPCION, M.LABORATORIO;
/ -- INDICADOR

SELECT * FROM V_MED_SIN_VENTAS;


-- 5.- MOSTRAR EL DETALLE CON EL NOMBRE, LABORATORIO, TOTAL VENDIDO CON UN CASE QUE INDIQUE 'POPULAR', 'MUY POPULAR', 'NO POPULAR'
CREATE OR REPLACE VIEW V_MED_POPULARIDAD AS
    SELECT R.*,
    (CASE
        WHEN UNIDADES_VENDIDAS BETWEEN 0 AND 12 THEN 'NO POPULAR'
        WHEN UNIDADES_VENDIDAS BETWEEN 13 AND 25 THEN 'POPULAR'
        WHEN UNIDADES_VENDIDAS > 25 THEN 'MUY POPULAR'
        ELSE 'VENTAS INDEFINIDAS'
    END) AS POPULARIDAD
    FROM (
        SELECT M.NOMBRE_GENERICO, M.NOMBRE_COMERCIAL, M.LABORATORIO, NVL(SUM(VM.CANTIDAD), 0) AS UNIDADES_VENDIDAS
        FROM MEDICAMENTO M
        LEFT JOIN VENTA_MEDICAMENTO VM ON VM.MEDICAMENTO_ID = M.ID_MEDICAMENTO
        GROUP BY M.NOMBRE_GENERICO, M.NOMBRE_COMERCIAL, M.LABORATORIO
    ) R;
/ -- INDICADOR

SELECT * FROM V_MED_POPULARIDAD;
