/* PAQUETE O PACKAGE: ES UN CONTENEDOR LOGICO QUE AGRUPA PROCEDIMIENTO, FUNCIONES, VARIABLES, CONSTANTES, TIPOS DE DATOS Y CURSORES
TODO DENTRO DE UNA MISMA UNIDAD DE PROGRAMA
-> SE PARECE A UNA CARPETA DE CODIGO ORGANIZADA QUE PERMITE REUTILIZAR Y MANTENER MEJOR EL CÓDIGO

UN PAQUETE TIENE DOS PARTES:
    1.- ESPECIFICACIÓN DE PACKAGE(PACKAGE SPECIFICATION)
        ES LA INTERFAZ PUBLICA
        DEFINE QUE PROCEDIMEINTOS, FUNCIONESY VARIABLES ESTARAN DISPONIBLES PARA SER USADOS FUERA
    2.- CUERPO DEL PACKAGE (PACKAGER BODY)
        CONTIENE LA IMPLEMENTAIÓN DE LO DECLARADO EN LA ESPECIFICACION
        AQUI SE ESCRIBE LA LOGICA
*/
-- DROP PACKAGE PKH_GENERAL;
CREATE OR REPLACE PACKAGE PKG_GENERAL IS
    PROCEDURE PR_DETALLE_LIBRO;
    FUNCTION SUMA(a number, b NUMBER) RETURN NUMBER;
END;
/ -- INDICADOR
    
    
CREATE OR REPLACE PACKAGE BODY PKG_GENERAL IS

    PROCEDURE PR_DETALLE_LIBRO
    IS
        -- PASO 1: DECLARAR EL CURSOR
        CURSOR LIBRO_INFO IS
        SELECT NOMBRE,
        (CASE GENERO
            WHEN 1 THEN 'DRAMA'
            WHEN 2 THEN 'TERROR'
            WHEN 3 THEN 'CIENCIA FICCION'
            WHEN 4 THEN 'NOVELA'
            WHEN 5 THEN 'THRILLER'
            ELSE 'SIN GENERO'
        END) AS GENERO, PRECIO FROM LIBRO;
        
        -- VARIABLES  LOCALES
        LV_NOMBRE LIBRO.NOMBRE%TYPE; -- SIRVE PARA GARANTIZR QUE LA VARIABLE QUE ESTOY ASIGNANDO ES PARA EL NOMBRE DEL LIBRO
        LV_GENERO NVARCHAR2(20);
        LV_PRECIO NUMBER;
    BEGIN
        -- PASO 2: ABRIR EL CURSOR
        OPEN LIBRO_INFO;
        -- PASO 3: RECUPERAR EL CURSOR
        LOOP
            -- POR CADA FILA RECORRIDA SE TOMEAN LOS DATOS DEL CURSOR
            FETCH LIBRO_INFO INTO LV_NOMBRE, LV_GENERO, LV_PRECIO;
            -- CONDICION PARA SALIR CUANDO EL CURSOR YA NO TENGA REGISTROS
            EXIT WHEN LIBRO_INFO%NOTFOUND; -- %NOTFOUND, DEVUELVE UN TRUE SI EL ULTIMO FETCH NO OBTUVO RESULTADOS
            DBMS_OUTPUT.PUT_LINE('NOMBRE DEL LIBRO: ' || LV_NOMBRE || ' ES DE GENERO ' || LV_GENERO || ' Y TIENE UN PRECIO DE ' || LV_PRECIO);
        END LOOP;
        -- PASO 4: CERRAR EL CURSOR
        CLOSE LIBRO_INFO;
    END PR_DETALLE_LIBRO;
    
    -- FUNCION QUE SUMA 2 NUMEROS
    FUNCTION SUMA(a NUMBER, b NUMBER)
    RETURN NUMBER IS
        RESULTADO NUMBER; -- DECLARACIÓN DE VARIABLES
    BEGIN
        -- LÓGICA DE LA FUNCIÓN
        RESULTADO := a + b;
        RETURN RESULTADO; -- OBLIGATORIA
    END SUMA;
END PKG_GENERAL;

BEGIN
    PKG_GENERAL.PR_DETALLE_LIBRO;
END;

BEGIN
    DBMS_OUTPUT.PUT_LINE(PKG_GENERAL.SUMA(1,2));
END;