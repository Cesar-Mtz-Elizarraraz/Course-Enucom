-- PRACTICA PARA USO DE SENTENCIA CASE Y CLAUSULAS JOIN
-- TABLA CINE
CREATE TABLE CINE(
    ID_CINE NUMBER,
    NOMBRE NVARCHAR2(100),
    CIUDAD NVARCHAR2(100),
    SALAS NUMBER,
    TIPO NUMBER, -- 1.TRADICONAL, 2.VIP, 3.IMAX
    CONSTRAINT CINE_PK PRIMARY KEY(ID_CINE)
);

INSERT INTO CINE VALUES(1, 'CINEMEX CENTRO', 'CDMX', 8, 1);
INSERT INTO CINE VALUES(2, 'CINEPOLIS PLAZA', 'MONTERREY', 12, 2);
INSERT INTO CINE VALUES(3, 'CINEMA LUX', 'GUADALAJARA', 6, 1);
INSERT INTO CINE VALUES(4, 'CINEPOLIX VIP ZONA RIO', 'TIJUANA', 10, 2);
INSERT INTO CINE VALUES(5, 'IMAX MEGA SCREEN', 'PUEBLA', 4, 3);
INSERT INTO CINE VALUES(6, 'CINEMAGIC', 'PUEBLA', 0, 0);
COMMIT;

-- TABLA FUNCION
CREATE TABLE FUNCION(
    ID_FUNCION NUMBER,
    PELICULA NVARCHAR2(100),
    DURACION NUMBER,
    HORARIO NVARCHAR2(100),
    CINE_ID NUMBER,
    CLASIFICACION NUMBER, -- 1.A, 2.B, 3.C, 4.PG13, 5.R 
    CONSTRAINT FUNCION_PK PRIMARY KEY(ID_FUNCION),
    CONSTRAINT CINE_FK FOREIGN KEY(CINE_ID) REFERENCES CINE(ID_CINE)
);

INSERT INTO FUNCION VALUES(1, 'AVENGER ENDGAME', 180, '18:00', 1, 5);
INSERT INTO FUNCION VALUES(2, 'FROZEN 2', 120, '16:00', 2, 1);
INSERT INTO FUNCION VALUES(3, 'BATMAN', 150, '20:00', 2, 5);
INSERT INTO FUNCION VALUES(4, 'SPIDERMAN', 140, '19:30', 3, 4);
INSERT INTO FUNCION VALUES(5, 'TOY STORY 4', 110, '15:00', 4, 1);
INSERT INTO FUNCION VALUES(6, 'JOKER', 122, '21:00', 5, 5);
INSERT INTO FUNCION VALUES(7, 'AVATAR 2', 190, '22:00', 5, 4);
INSERT INTO FUNCION VALUES(8, 'COCO', 105, '14:00', 1, 1);
INSERT INTO FUNCION VALUES(9, 'TITANIC', 195, '17:00', 3, 3);
INSERT INTO FUNCION VALUES(10, 'GUARDIANES DE LA GALAXIA', 130, '20:30', 4, 4);
COMMIT;


/*
    -- 1.- MOSTRAR TODAS LAS FUNCIONES CON EL NOMBRE DEL CINE Y USAR CASE PARA MOSTRAR EL TIPO DE CINE Y LA CLASIFICACION EN TEXT
    -- 2.- CONTAR CUANTAS FUNCIONES HAY POR CINE
    -- 3.- MOSTRAR EL CINE QUE TIEN MÁS FUNCIONES PROGRAMADAS
    -- 4.- MOSTRAR CUANTAS FUNCIONES PROGRAMADAS TIENE CADA CINE (NOMBRE DEL CINE Y NÚMERO DE FUNCIONES)
    -- 5.- ORDENAR LAS FUNCIONES POR PELICULA Y LUEGO POR DURACIÓN(ES UNA SOLA CONSULTA)
    -- 6.- ORDENAR LOS CINES POR CIUDAD Y LUEGO POR NÚMERO DE SALAS(ES UNA SOLA CONSULTA)
    -- 7.- MOSTRAR EL TOTAL DE DURACIÓN DE PELICULAS PROYECTADAS EN CADA CINE
    -- 8.- MOSTRAR LA FUNCION CON LA PELICULA MÁS LARGA DE CADA CINE
    -- 9.- MOSTRAR LAS FUNCIONES QUE NO TIENEN CINE ASIGNADO
    -- 10.- MOSTRAR LOS CINES QUE NO TIENEN FUNCIONES ASIGNADAS
    -- 11.- MOSTRAR EL DETALLE DEL CINE Y DE LAS FUNCIONES EN UNA SOLA COLUMNA USANDO CONCAT O PIPES
    -- EJEMPLO: LA FUNCION "" EN EL CINE "" QUE ES DE TIPO "" Y ESTA UBICADO EN "" DURA "" MINUTOS Y ES CLASIFICACIÓN ""
*/


-- 1.- MOSTRAR TODAS LAS FUNCIONES CON EL NOMBRE DEL CINE Y USAR CASE PARA MOSTRAR EL TIPO DE CINE Y LA CLASIFICACION EN TEXT
SELECT FUN.PELICULA, FUN.DURACION, FUN.HORARIO, CIN.NOMBRE AS NOMBRE_CINE, 
(CASE CIN.TIPO
    WHEN 1 THEN 'TRADICIONAL'
    WHEN 2 THEN 'VIP'
    WHEN 3 THEN 'IMAX'
    ELSE 'SIN TIPO'
END) AS TIPO_CINE,
(CASE FUN.CLASIFICACION
    WHEN 1 THEN 'A'
    WHEN 2 THEN 'B'
    WHEN 3 THEN 'C'
    WHEN 4 THEN 'PG13'
    WHEN 5 THEN 'R'
    ELSE 'SIN CLASIFICACION'
END) AS CLASIFICACION
FROM FUNCION FUN
INNER JOIN CINE CIN ON CIN.ID_CINE = FUN.CINE_ID;

-- 2.- CONTAR CUANTAS FUNCIONES HAY POR CINE
SELECT CIN.NOMBRE AS NOMBRE_CINE, COUNT(FUN.ID_FUNCION) AS TOTAL_FUNCIONES
FROM CINE CIN
LEFT JOIN FUNCION FUN ON CIN.ID_CINE = FUN.CINE_ID
GROUP BY CIN.NOMBRE;

-- 3.- MOSTRAR EL CINE QUE TIENE MÁS FUNCIONES PROGRAMADAS
SELECT * FROM(
    SELECT CIN.NOMBRE AS NOMBRE_CINE, COUNT(FUN.ID_FUNCION) AS TOTAL_FUNCIONES
    FROM CINE CIN
    LEFT JOIN FUNCION FUN ON CIN.ID_CINE = FUN.CINE_ID
    GROUP BY CIN.NOMBRE
    ORDER BY CIN.NOMBRE
) WHERE ROWNUM = 1;

-- 4.- MOSTRAR CUANTAS FUNCIONES PROGRAMADAS TIENE CADA CINE (NOMBRE DEL CINE Y NÚMERO DE FUNCIONES)
SELECT CIN.NOMBRE AS NOMBRE_CINE, COUNT(FUN.ID_FUNCION) AS TOTAL_FUNCIONES
FROM CINE CIN
RIGHT JOIN FUNCION FUN ON CIN.ID_CINE = FUN.CINE_ID
GROUP BY CIN.NOMBRE;

-- 5.- ORDENAR LAS FUNCIONES POR PELICULA Y LUEGO POR DURACIÓN(ES UNA SOLA CONSULTA)
SELECT * FROM FUNCION
ORDER BY PELICULA ASC, DURACION ASC;

-- 6.- ORDENAR LOS CINES POR CIUDAD Y LUEGO POR NÚMERO DE SALAS(ES UNA SOLA CONSULTA)
SELECT * FROM CINE
ORDER BY CIUDAD ASC, SALAS ASC;

-- 7.- MOSTRAR EL TOTAL DE DURACIÓN DE PELICULAS PROYECTADAS EN CADA CINE
SELECT CIN.NOMBRE AS NOMBRE_CINE, SUM(FUN.DURACION) AS TOTAL_DURACION_PELICULAS
FROM CINE CIN
INNER JOIN FUNCION FUN ON CIN.ID_CINE = FUN.CINE_ID
GROUP BY CIN.NOMBRE;

-- 8.- MOSTRAR LA FUNCION CON LA PELICULA MÁS LARGA DE CADA CINE
SELECT CIN.NOMBRE AS NOMBRE_CINE, FUN.PELICULA AS PELICULA_MAS_LARGA, FUN.DURACION AS DURACION
FROM FUNCION FUN
RIGHT JOIN CINE CIN ON CIN.ID_CINE = FUN.CINE_ID
WHERE FUN.DURACION = (
  SELECT MAX(F.DURACION)
  FROM FUNCION F
  WHERE F.CINE_ID = FUN.CINE_ID
);

-- 9.- MOSTRAR LAS FUNCIONES QUE NO TIENEN CINE ASIGNADO
SELECT FUN.*
FROM FUNCION FUN
LEFT JOIN CINE CIN ON CIN.ID_CINE = FUN.CINE_ID
WHERE CIN.ID_CINE IS NULL;

-- 10.- MOSTRAR LOS CINES QUE NO TIENEN FUNCIONES ASIGNADAS
SELECT CIN.*
FROM FUNCION FUN
RIGHT JOIN CINE CIN ON CIN.ID_CINE = FUN.CINE_ID
WHERE FUN.ID_FUNCION IS NULL;

-- 11.- MOSTRAR EL DETALLE DEL CINE Y DE LAS FUNCIONES EN UNA SOLA COLUMNA USANDO CONCAT O PIPES
-- EJEMPLO: LA FUNCION "" EN EL CINE "" QUE ES DE TIPO "" Y ESTA UBICADO EN "" DURA "" MINUTOS Y ES CLASIFICACIÓN ""
SELECT 'LA FUNCION ' || FUN.PELICULA || ' EN EL CINE ' || CIN.NOMBRE || ' QUE ES DE TIPO ' || 
(CASE CIN.TIPO
    WHEN 1 THEN 'TRADICIONAL'
    WHEN 2 THEN 'VIP'
    WHEN 3 THEN 'IMAX'
    ELSE 'NO ESPECIFICADO'
END)
|| ' Y ESTA UBICADO EN ' || CIN.CIUDAD ||
' DURA ' || FUN.DURACION || ' MINUTOS Y ES CLASIFICACION ' || 
(CASE FUN.CLASIFICACION
    WHEN 1 THEN 'A'
    WHEN 2 THEN 'B'
    WHEN 3 THEN 'C'
    WHEN 4 THEN 'PG13'
    WHEN 5 THEN 'R'
    ELSE 'NO ESPECIFICADA'
END)
FROM CINE CIN
INNER JOIN FUNCION FUN ON CIN.ID_CINE = FUN.CINE_ID


